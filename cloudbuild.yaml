steps:
# Clone source code from GitHub
- name: 'gcr.io/cloud-builders/git'
  args: ['clone','https://github.com/SamFangshan/Virtual-Hospital.git']

# Python test
- name: 'docker/compose:1.15.0'
  args: ['up', '-d']

- name: 'docker.io/library/python:3.7'
  args: ['pip', 'install', '-t', '/workspace/lib', '-r', 'requirements.txt']

- name: 'docker.io/library/python:3.7'
  args: ['python', '-m', 'pytest']
  env:
  - 'PYTHONPATH=/workspace/lib:.'
  - 'PG_USER=postgres'
  - 'PG_PASSWORD=password'
  - 'PG_HOST=postgres_db'
  - 'PG_PORT=5432'
  - 'TEST_PG_DATABASE=testing'
  - 'STRIPE_PUBLISHABLE_KEY=fakepubkey'
  - 'STRIPE_SECRET_KEY=fakeseckey'

# Build Docker image
- name: 'gcr.io/cloud-builders/docker'
  args: ['build','-t','gcr.io/${_PROJECT}/${_CONTAINERNAME}:${_VERSION}','.']

# Push Docker image to GCS
- name: 'gcr.io/cloud-builders/docker'
  args: ['push','gcr.io/${_PROJECT}/${_CONTAINERNAME}:${_VERSION}']

# Environment set-up
- name: 'gcr.io/cloud-builders/kubectl'
  args:
  - 'set'
  - 'env'
  - 'deployment/${_DEPLOYMENTNAME}'
  - 'STRIPE_PUBLISHABLE_KEY=${_STRIPE_PUBLISHABLE_KEY}'
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=${_ZONE}'
  - 'CLOUDSDK_CONTAINER_CLUSTER=${_GKE_CLUSTER}'

- name: 'gcr.io/cloud-builders/kubectl'
  args:
  - 'set'
  - 'env'
  - 'deployment/${_DEPLOYMENTNAME}'
  - 'STRIPE_SECRET_KEY=${_STRIPE_SECRET_KEY}'
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=${_ZONE}'
  - 'CLOUDSDK_CONTAINER_CLUSTER=${_GKE_CLUSTER}'

- name: 'gcr.io/cloud-builders/kubectl'
  args:
  - 'set'
  - 'env'
  - 'deployment/${_DEPLOYMENTNAME}'
  - 'PG_USER=${_PG_USER}'
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=${_ZONE}'
  - 'CLOUDSDK_CONTAINER_CLUSTER=${_GKE_CLUSTER}'

- name: 'gcr.io/cloud-builders/kubectl'
  args:
  - 'set'
  - 'env'
  - 'deployment/${_DEPLOYMENTNAME}'
  - 'PG_PASSWORD=${_PG_PASSWORD}'
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=${_ZONE}'
  - 'CLOUDSDK_CONTAINER_CLUSTER=${_GKE_CLUSTER}'

- name: 'gcr.io/cloud-builders/kubectl'
  args:
  - 'set'
  - 'env'
  - 'deployment/${_DEPLOYMENTNAME}'
  - 'PG_HOST=${_PG_HOST}'
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=${_ZONE}'
  - 'CLOUDSDK_CONTAINER_CLUSTER=${_GKE_CLUSTER}'

- name: 'gcr.io/cloud-builders/kubectl'
  args:
  - 'set'
  - 'env'
  - 'deployment/${_DEPLOYMENTNAME}'
  - 'PG_PORT=${_PG_PORT}'
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=${_ZONE}'
  - 'CLOUDSDK_CONTAINER_CLUSTER=${_GKE_CLUSTER}'

- name: 'gcr.io/cloud-builders/kubectl'
  args:
  - 'set'
  - 'env'
  - 'deployment/${_DEPLOYMENTNAME}'
  - 'PG_DATABASE=${_PG_DATABASE}'
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=${_ZONE}'
  - 'CLOUDSDK_CONTAINER_CLUSTER=${_GKE_CLUSTER}'

# Update image on GKE Deployment
- name: 'gcr.io/cloud-builders/kubectl'
  args:
  - 'set'
  - 'image'
  - 'deployment/${_DEPLOYMENTNAME}'
  - '${_CONTAINERNAME}=gcr.io/${_PROJECT}/${_CONTAINERNAME}:${_VERSION}'
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=${_ZONE}'
  - 'CLOUDSDK_CONTAINER_CLUSTER=${_GKE_CLUSTER}'

# Restart GKE Deployment
- name: 'gcr.io/cloud-builders/kubectl'
  args:
  - 'rollout'
  - 'restart'
  - 'deployment'
  - '${_DEPLOYMENTNAME}'
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=${_ZONE}'
  - 'CLOUDSDK_CONTAINER_CLUSTER=${_GKE_CLUSTER}'

substitutions:
    _VERSION: v1.0

options:
    substitution_option: 'ALLOW_LOOSE'
